#cloud-config

coreos:
  etcd:
    # generate a new token for each unique cluster from https://discovery.etcd.io/new
    # WARNING: replace each time you 'vagrant destroy'
    #discovery: https://discovery.etcd.io/<token>
    addr: $public_ipv4:4001
    peer-addr: $public_ipv4:7001
  fleet:
    public-ip: $public_ipv4
  units:
    - name: etcd.service
      command: start
    - name: fleet.service
      command: start
    - name: docker.service
      drop-ins:
        - name: 50-skydns.conf
          content: |
            [Service]
            Environment=DOCKER_OPTS='--dns="172.17.42.1"'
            Environment=DOCKER_OPT_BIP='--bip="172.17.42.1/16"'
    - name: docker-skydns.service
      command: start
      enable: true
      content: |
        [Unit]
        Description=skydns service
        After=docker.service

        [Service]
        User=core
        ExecStartPre=-/usr/bin/docker kill skydns
        ExecStartPre=-/usr/bin/docker rm -f skydns
        ExecStart=/usr/bin/docker run -d -p 172.17.42.1:53:53/udp --name skydns crosbymichael/skydns -nameserver 10.10.10.10:53,10.10.11.11:53,8.8.8.8:53 -domain rest

        [Install]
        WantedBy=multi-user.target
    - name: docker-skydock.service
      command: start
      enable: true
      content: |
        [Unit]
        Description=skydock service
        After=docker-skydns.service

        [Service]
        User=core
        ExecStartPre=-/usr/bin/docker kill skydock
        ExecStartPre=-/usr/bin/docker rm -f skydock
        ExecStart=/usr/bin/docker run -d -v /var/run/docker.sock:/docker.sock --name skydock crosbymichael/skydock -ttl 30 -environment dev -s /docker.sock -domain rest -name skydns

        [Install]
        WantedBy=multi-user.target
    - name: docker-app-data.service
      command: start
      enable: true
      content: |
        [Unit]
        Description= app data service
        After=docker-skydock.service

        [Service]
        User=core
        ExecStartPre=-/usr/bin/docker kill app-data
        ExecStartPre=-/usr/bin/docker rm -f app-data
        ExecStart=/usr/bin/docker run -v /home/core/project:/srv/www/app -v /home/core/composer:/root/.composer --name app-data busybox:latest echo "init app data"
write_files:
  - path: /home/core/env/symfony
    permissions: 0644
    owner: core
    content: |
      SYMFONY_DEBUG=1
      SYMFONY_ENV=dev